* Index :toc:
- [[#features][Features]]
- [[#prerequisites][Prerequisites]]
- [[#installation][Installation]]
- [[#after-install][After Install]]
- [[#my-configuration-features][My Configuration features]]
- [[#tips][Tips]]
  - [[#search-and-replace-in-whole-project][Search and replace in whole project]]
  - [[#multiple-cursors][Multiple-cursors]]
  - [[#using-method-generator-emmet-in-ruby][Using method generator (emmet) in ruby]]
  - [[#configuring-forge-for-creating--reviewing-pull-requests][Configuring Forge for Creating / Reviewing pull requests]]
  - [[#for-other-git-server][For other git server]]
- [[#custom-keybindings][Custom Keybindings]]
- [[#using-autocomplete][Using Autocomplete]]
- [[#getting-help][Getting help]]
  - [[#using-emacs-from-snap-also-recommended][Using Emacs from snap (also recommended)]]
- [[#what-i-need-to-know-to-start-using-][What i need to know to start using ?]]

* Features
+ Made for Ruby on rails
+ Javascript support
+ Cool stuff for Ruby Refactoring
+ Advance autocomplete and snippets management
+ Code Diagnostics
+ Best git client integrated (Magit)
+ Vim Keybindings

* Prerequisites
 - Git 2.23+
 - Emacs 27 with GNUTLS support
 - ripgrep 11.0+ =(sudo apt install ripgrep)=
 - GNU find
 - OPTIONAL fd 7.3.0+ (improves file indexing performance for some commands) =(sudo apt install find-fd)= (good for large projects)
 - typescript-language-server =(npm install -g typescript-language-server)=

* Installation
#+BEGIN_SRC shell
# Install my config
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
git clone https://github.com/otavioschwanck/doom_emacs_dotfiles.git ~/.doom.d
~/.emacs.d/bin/doom install

# Some dependencies (ubuntu)
sudo apt install fd-find ripgrep libtool-bin cmake tidy stylelint js-beautify

# If you use mac
brew install fd ripgrep

# Install dependencies for LSP
npm install -g vscode-css-languageserver-bin vscode-html-languageserver-bin typescript-language-server
gem install solargraph
#+END_SRC

* After Install
Open your personal configuration with =SPC f P= user.org and read the file
* My Configuration features
Here is an example of some features that i made for Ruby:
#+caption: AutoComplete
[[refactoring in emacs.gif]]

* Tips
** Search and replace in whole project
*** Replacing a text
You can search and replace by pressing =SPC s p= to search in project, then, =C-c C-e= to open the search on a buffer.  To replace some word, just run =:%s/old_text/new_text/g=. You also can use the multiple cursors.

*** Renaming multiple files
If you want to also, rename multiple files in project, just run =M-x= =find-dired= and type -name "\*your_class\*.extension" (without the \ (vertical bars)). It will open a dired with all matches in the project.  Just press =C-e C-e= to toggle the edit mode and edit the filenames like a text file!
Press C-c C-c to confirm the edit or C-c C-k to cancel.

** Multiple-cursors
To use multiple-cursors, select the word, then, press =M-d= to go forward or =M-D= to go backwards.  Press =C= to edit all.

** Using method generator (emmet) in ruby
Syntax: init@param1,param2;method_name@param1,param2;method2;method@param

Press C-e to expand.

** Configuring Forge for Creating / Reviewing pull requests
*** For github
1 - Go to https://github.com/settings/tokens and create a personal token with =repo (all)=, =read:org= and =user=

2 - Don't forget to configure your user in github with git config --global github.user youruser

3 - Create a file called =~/.authinfo=

4 - add =machine api.github.com login youruser^forge password yourtokenhere= and =machine api.github.com login otavioschwanck^github-review password yourtokenhere= to this file

5 - M-x =epa-encrypt-file= and select =~/authinfo= to encrypt with gpg.

6 - delete the =~/.authinfo=


** For other git server
See: https://practicalli.github.io/spacemacs/source-control/forge-configuration.html and https://magit.vc/manual/ghub/Getting-Started.html

* Custom Keybindings
| Key                 | Mode               | Description                                 |
| SPC a and SPC A     | Ruby               | Go to / create spec file                    |
| SPC v               | All                | Open terminal on project root               |
| SPC -               | All                | Indent the file                             |
| SPC =               | Ruby               | Runs rubocop -a on current file             |
| ]g and [g           | All                | Navigate on git changes                     |
| SPC l               | Terminals          | Clean terminal                              |
| C-j                 | All                | Go one sentence down (very useful)          |
| C-k                 | All                | Go one sentence up (very useful)            |
| C-v                 | All (insert mode)  | Paste on insert mode                        |
| J and K             | Visual Mode        | Drag stuff down and up                      |
| C-, and C-;         | Normal Mode        | Previous and Next buffer                    |
| รง or \              | Normal mode        | Save all files                              |
| SPC gdo and SPC gdm | Git conflict       | Keep other or Keep mine (git)               |
| SPC e               | All                | Toggle treemacs                             |
| C-e                 | Insert (web-mode)  | emmet-expand (like ul>li*3)                 |
| C-e                 | Insert (ruby-mode) | emmet-expand (Ruby) (Method generator)      |
| SPC m i             | normal             | toggle if / unless into single / multi-line |
| SPC m S             | normal             | split a giant string into strings with \    |
| SPC r s             | normal             | Search inside app/services OR app/business  |
| SPC r S             | normal             | Search inside app/services  |
| C-x C-a             | insert mode        | Insert rails routes on code                 |

* Using Autocomplete
#+caption: Autocomplete
On my doom config, i've done several tweaks to the default autocomplete.

To toggle snippets and go forward, use C-o.

#+caption: AutoComplete
[[autocomplete.gif]]

| Key     | Command                                                            |
| Tab     | Next item                                                          |
| S-Tab   | Previous item                                                      |
| C-o     | Toggle Snippet                                                     |
| C-p     | Select a similar word instantly (keep pressing to change the word) |
| C-x C-s | See all the snippets                                               |
| <C-spc> | Toggle current selection                                           |
| C-d     | (while snipped is active) Delete the highlighted snippet           |

* Getting help
For getting help, access doom official github page: https://github.com/hlissner/doom-emacs

** Using Emacs from snap (also recommended)
Just run `sudo snap install emacs --classic`

* What i need to know to start using ?
I really recommend you to learn the basics of vim first, choose one:

+ [[https://www.udemy.com/course/vim-commands-cheat-sheet/][Vim Udemy Course]] (non-free) (for vim) (3h course) (very good course, i did this) (Very Complete!)
+ [[https://www.youtube.com/watch?v=ER5JYFKkYDg][Vim Tutorial pt 1]] and [[https://www.youtube.com/watch?v=tExTz7GnpdQ][Vim Tutorial pt 2]] (free) (basic)
+ [[https://www.youtube.com/watch?v=H3o4l4GVLW0&list=PLm323Lc7iSW_wuxqmKx_xxNtJC_hJbQ7R][Vim Youtube Course - 6 Videos, ignore the 6]] (free) (basic-intermediary)

After that, you can see the [[https://www.youtube.com/watch?v=rCMh7srOqvw&list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj][Doom Casts]] to learn the basics of doom emacs (optional)
Don't forget to see the =evil cheatsheet pt-BR.png= on the root of this repository!

Don'tt forget the [[https://discord.gg/qvGgnVx][Doom Emacs Discord Server]], is always full of people that always helps!
You can get help of any command on doom with SPC h p (function) of SPC h k + keybinding = (to see the options, etc.)
